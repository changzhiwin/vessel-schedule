package cc.knowship.subscribe.wharf

import zio._
import zio.json._
import zio.http.{Client, Request, URL}

import cc.knowship.subscribe.SubscribeException
import cc.knowship.subscribe.util.Constants
import cc.knowship.subscribe.service.WharfInformationServ
import cc.knowship.subscribe.db.model.{Vessel, Voyage}

case class Hb56WharfInformation(client: Client) extends WharfInformationServ {

  lazy val VoyageAPI = URL.fromString("http://127.0.0.1:3000/retrieve/hb56")

  override def voyageOfVessel(vesselName: String, voyageName: String): Task[String] = {
    ZIO.succeed(voyageName)
  }

  override def voyageStatus(vesselName: String, voyageCode: String): Task[(Vessel, Voyage)] = for {
    url      <- ZIO.fromEither(VoyageAPI)
                   .mapError(m => new URLParseFailed(s"$m"))

    response <- client.request(Request.get(url.setQueryParams(s"vessel=${vesselName}&voyage=${voyageCode}")))
    body     <- response.body.asString
    voReply  <- ZIO.fromEither(body.fromJson[VoyageReply])
                   .mapError(_ => JsonDecodeFailed("VoyageReply"))
  } yield result

}

case class Hb56ScheduleInfoReply(code: Int, msg: String, cost: Float, tabs: List[Hb56ScheduleBody])

object Hb56ScheduleInfoReply {
  implicit val codec: JsonCodec[Hb56ScheduleInfoReply] = DeriveJsonCodec.gen
}

case class Hb56ScheduleBody(total: Int, rows: List[Hb56ScheduleData])

object Hb56ScheduleBody {
  implicit val codec: JsonCodec[Hb56ScheduleBody] = DeriveJsonCodec.gen
}

case class Hb56ScheduleData(total: Int, )

object Hb56ScheduleData {
  implicit val codec: JsonCodec[Hb56ScheduleData] = DeriveJsonCodec.gen
}


/*
// part 1
      "TERM": "沪东(外4)",
      "TER_SID": "100305",
      "VSL_CNNAME": "海丰仁德",
      "VSL_MMSI": "477798400",
      "VSL_ENNAME": "SITC RENDE",
      "IVOYAGE": "2222SI",
      "EVOYAGE": "2222S",
      "AGENTNM": "新海丰",
      "SCDSTATUS": "预报",
      "SCD_ETA": "2022-10-29 00:00",
      "SCD_ATA": null,
      "SCD_CULOC": "长江口",
      "VSL_VTPCODE": "全集装箱船",
      "SCD_FPOT": "釜山",
      "SCD_ID": 1391039,
      "SEARCH_CONDITION": "SITCRENDE2222SI/2222S海丰仁德2222SI/2222S",
      "ENNAME": "SITCRENDE"
      
// part 2
      "TERM": "沪东(外4)",
      "TER_SID": 100305,
      "VBTSTATUS": "未靠泊",
      "VSL_CHN_NAME": "海丰仁德",
      "VSL_MMSI": "477798400",
      "SCD_ENG_NAME": "SITC RENDE",
      "IVOYAGE": "2222SI",
      "EVOYAGE": "2222S",
      "SBT_PSTTM": "2022-10-29 00:00",
      "SBT_ASTTM": null,
      "SBT_PEDTM": "2022-10-29 10:00",
      "SBT_AEDTM": null,
      "AGENTCN": "新海丰",
      "VOY_SKEY": 100305642891,
      "SOURCE_VERSION": "5",
      "SCD_SKEY": 100305527627,
      "SCD_PKID": "5100305527627",
      "TER_SID1": 100305,
      "SEARCH_CONDITION": "SITCRENDE2222SI/2222S海丰仁德2222SI/2222S",
      "ENNAME": "SITCRENDE"
*/